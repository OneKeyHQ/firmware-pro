syntax = "proto2";
package hw.trezor.messages.neo;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageNeo";

/**
 * Request: Address at the specified index
 * @start
 * @next NeoAddress
 */
message NeoGetAddress {
    repeated uint32 address_n = 1;              // BIP-32 path to derive the key from master node
    optional bool show_display = 2;             // optionally show on display before sending the result
}

/**
 * Response: Address for the given index
 * @end
 */
message NeoAddress {
    optional string address = 1;                // Neo address as hex-encoded string
    optional bytes public_key = 2;               // public key used to generate the address
}

/**
 * Request: ask device to sign Neo transaction
 * @start
 * @next NeoSignedTx
 */
message NeoSignTx {
    repeated uint32 address_n = 1;         // BIP-32 path to derive the key from master node
    required bytes raw_tx = 2;              // serialized raw transaction
    optional uint32 network_magic = 3[default=860833102];       // network magic number
}

/**
 * Response: signature for transaction
 * @end
 */
message NeoSignedTx {
    required bytes public_key = 1;  // public key for the private key used to sign tx
    required bytes signature = 2;           // the signature of the raw transaction
}

// /**
//  * Request: ask device to sign Neo message
//  * @start
//  * @next NeoMessageSignature
//  */
// message NeoSignMessage {
//     repeated uint32 address_n = 1;
// }

// /**
//  * Response: signature for message
//  * @end
//  */
// message NeoMessageSignature {
//     required bytes signature = 1;
//     required string address = 2;
// }
